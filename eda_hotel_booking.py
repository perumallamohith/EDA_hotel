# -*- coding: utf-8 -*-
"""EDA_Hotel_Booking.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T3Mn8PjpokLTHGFXzHNqAMldPv9WbuCL

Have you ever wondered when the best time of year to book a hotel room is? Or the optimal length of stay in order to get the best daily rate? What if you wanted to predict whether or not a hotel was likely to receive a disproportionately high number of special requests? This hotel booking dataset can help you explore those questions!
This data set contains booking information for a city hotel and a resort hotel, and includes information such as when the booking was made, length of stay, the number of adults, children, and/or babies, and the number of available parking spaces, among other things. All personally identifying information has been removed from the data.
Explore and analyze the data to discover important factors that govern the bookings.
"""

# Commented out IPython magic to ensure Python compatibility.
#Importing all the required Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
import seaborn as sns
# %matplotlib inline

from google.colab import drive
drive.mount('/content/drive')

#Loading the data set from the Google drive
path = '/content/drive/MyDrive/Almabetter/Hotel Bookings.csv'
df = pd.read_csv(path)

#Seeing the first 5 rows ( Dataset First Look)
df.head(5)

#Description of Data set
df.describe()

#Viewing all columns in order
df.columns

"""###Cleaning the Data Set"""

df.info()

#Below are data cleaning steps
df['children'] = df['children'].replace(np.nan,0).astype(int)
df['country'] = df['country'].replace(np.nan, 'N/A')
df['agent'] = df['agent'].replace(np.nan,0).astype(int)
df['company'] = df['company'].fillna('N/A')

#Double checking the our clean was done correctly or not
df.info()

#rechecking our first 5 rows
df.head(5)

"""###ANALYSIS AND VISUALIZATION FOR EDA

"""

#Shape of our Data Frame is?
df.shape

#Different hotels in hotels columns and their count
df.hotel.value_counts()

#Different customer types and their count
df.customer_type.value_counts()

df['arrival_date_month'].value_counts()

#Visualizing no.of hotel booking in each year
plt.rcParams['font.size'] = 15
plt.rcParams['figure.figsize'] = (10, 5)
year_index = df['arrival_date_year'].value_counts()
ax = sns.barplot(year_index.index,year_index)

"""From above chart we can consider that year 2016 has more no.of booking"""

#Breakingdown no.of booking each year and type of hotel they booked
sns.countplot (x= 'arrival_date_year', data=df , hue= 'hotel').set_title ('yearly_bookings')

"""We can clearly see that cityhotel has highest no.of booking in years 2015,2016,2017"""

df['arrival_date_month'].value_counts()



#Going much deeper into the yearly sales
year_2015 = df[df['arrival_date_year'] == 2015 ]
year_2016 = df[df['arrival_date_year'] == 2016]
year_2017 = df[df['arrival_date_year'] == 2017]

counts1 = year_2015['arrival_date_month'].value_counts()
counts2 = year_2016['arrival_date_month'].value_counts()
counts3 = year_2017['arrival_date_month'].value_counts()

counts1

#Year 2015 monthly sales
sns.barplot(counts1.index, counts1)

plt.xticks(rotation=90)

#Year 2016 monthly sales
sns.barplot(counts2.index, counts2)
plt.xticks(rotation=90)

#Year 2017 monthly sales
sns.barplot(counts3.index, counts3)
plt.xticks(rotation=90)

#Monthly booking for 2016,2017,2018
counts = df['arrival_date_month'].value_counts()
sns.barplot(counts.index, counts)
plt.xticks(rotation=90)
plt.tight_layout()

"""###We can see on month of August more no.of booking happened

"""

df[df['arrival_date_month'] == 'August']['arrival_date_day_of_month'].value_counts()

#Which date is showing more no.of booking in August

#counts = df['arrival_date_month'].value_counts()
sns.countplot(df[df['arrival_date_month'] == 'August']['arrival_date_day_of_month'])

"""We can clearly see in the August Month on 14th dat most no.of booking and 23rd and 30th of August less no.of booking"""

# Count plot for Categorical variables
lst_count = ['meal', 'market_segment', 'distribution_channel', 'reserved_room_type', 'assigned_room_type', 'deposit_type', 'customer_type', 'reservation_status']
plt.figure(figsize = (20,20))
#sns.set_theme()
for i in enumerate(lst_count):
    plt.subplot(5, 2,i[0]+1)
    sns.countplot(data = df, x = df[i[1]])
    plt.xticks(rotation=2

               )

#Which country makes more no.of Bookings
sns.barplot(x=df.country.value_counts().head(10).index, y=df.country.value_counts().head(10))

"""###people from Portugal made the highest number of bookings"""

#Which countries makes less no.of booking
sns.barplot(x=df.country.value_counts().tail(10).index, y=df.country.value_counts().tail(10))

df_copy = df.copy()

"""##Pattern of cancellations"""

#relation between market segment and cancellation
sns.countplot(x='market_segment',data=df ,hue='is_canceled')

"""From above graph we can say that Online TA did more cancellation when compared to other market segments"""

#relation between required_car_parking and cancellation
sns.countplot(x='required_car_parking_spaces',data=df ,hue='is_canceled')

"""here we can see that some people are not preferaing the hotel if there is no parking space"""

#max no.of days spent
df['max_spent'] = df['stays_in_week_nights'] + df['stays_in_weekend_nights']
df.max_spent.max()

plt.figure(figsize = (13,8))
sns.countplot(df[df['max_spent']!=0]['max_spent'],facecolor = 'blue')
df.max_spent.mean()
#On an average people preferaning 2 to 3 days and average is 3.4

#visualing in other way(box plot)
plt.figure(figsize = (10,7))
sns.boxplot(df[df['max_spent']!=0]['max_spent'])

df.head(3)

"""Visualizing booking in pie chat

"""

#booking
values= df['hotel'].value_counts().tolist()
#print(values)
labe = df['hotel'].value_counts().index.tolist()
#print(labe)

plt.title('Booking split')
plt.pie(values ,labels=labe)
plt.show()

#cancellation
values_c = df['is_canceled'].value_counts().tolist()
label_c =df['is_canceled'].value_counts().index.tolist()
plt.title('Cancellation split')
plt.pie(values_c ,labels=label_c)
plt.show()

"""plotting no of previous cancellations against the number of cancellations"""

#how frequent are the previous cancelers in this cancelling hotels
plt.rcParams['figure.figsize'] = (10, 5)
sns.barplot(x= "previous_cancellations" ,y = "is_canceled", data = df_copy)

"""Lead time vs cancellation"""

a = df_copy.groupby("lead_time")['is_canceled'].describe()
sns.scatterplot(x=a.index, y=a["mean"] * 100)

lst_count = ['market_segment', 'distribution_channel', 'reserved_room_type', 'assigned_room_type', 'deposit_type', 'customer_type']
plt.figure(figsize = (20,20))
sns.set_theme()
for i in enumerate(lst_count):
    plt.subplot(5, 2,i[0]+1)
    sns.countplot(data = df, x = df[i[1]],hue = 'is_canceled')
    plt.xticks(rotation=2)

"""Overall visitiors to the hotel"""

#we need to sum babies,adults, children in order to know total vistiors.
df['total_visitors'] = df['adults'] + df['children'] + df['babies']
df['total_visitors'].value_counts()

sns.countplot(data = df, x = df['total_visitors'])

"""from above graph we can see 2 people are coming more to hotels"""

df['adr_pp']= df.adr/df.total_visitors

# plotting variation in adr with room type

sns.barplot(data = df, x = 'reserved_room_type', y = 'adr_pp', hue = 'hotel')

"""#Conclusion

*Year 2016 has most no of bookings

*People are choosing City hotel when compared to Resort hotel

*Month of August has more no.of Bookings

*Online TA did more cancellation when compared to other market segments

*some people are not preferaing the hotel if there is no parking space

*Portugal sends most number of visitors in different hotels

*people who have made a cancellation previously are much likely to cancel their bookings

*lead time is directly proportional to no of cancellations

*online bookings and the bookings with refundable deposit type has the most chances of cancellation.

*Mostly 2 members are comming to hotel

"""